Server running on port 3015
the user from the middle wear Query {
  _mongooseOptions: {},
  _transforms: [],
  _hooks: Kareem { _pres: Map {}, _posts: Map {} },
  _executionCount: 0,
  mongooseCollection:
   NativeCollection {
     collection: Collection { s: [Object] },
     Promise: [Function: Promise],
     _closed: false,
     opts:
      { schemaUserProvidedOptions: [Object],
        capped: false,
        autoCreate: undefined,
        Promise: [Function: Promise],
        '$wasForceClosed': undefined },
     name: 'users',
     collectionName: 'users',
     conn:
      NativeConnection {
        base: [Mongoose],
        collections: [Object],
        models: [Object],
        config: [Object],
        replica: false,
        options: null,
        otherDbs: [],
        relatedDbs: {},
        states: [Object],
        _readyState: 1,
        _closeCalled: false,
        _hasOpened: true,
        plugins: [],
        id: 0,
        _listening: false,
        _connectionString: 'mongodb://localhost:27017/bloglist-dev-test',
        _connectionOptions: [Object],
        name: 'bloglist-dev-test',
        host: 'localhost',
        port: 27017,
        user: undefined,
        pass: undefined,
        client: [MongoClient],
        '$initialConnection': [Promise],
        db: [Db] },
     queue: [],
     buffer: false,
     emitter:
      EventEmitter {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined } },
  model: Model { User },
  schema:
   Schema {
     obj:
      { username: [Object],
        name: [Object],
        passwordHash: [Function: String],
        blogs: [Array] },
     paths:
      { username: [SchemaString],
        name: [SchemaString],
        passwordHash: [SchemaString],
        blogs: [SchemaArray],
        _id: [ObjectId],
        __v: [SchemaNumber] },
     aliases: {},
     subpaths: { 'blogs.$': [ObjectId] },
     virtuals: { id: [VirtualType] },
     singleNestedPaths: {},
     nested: {},
     inherits: {},
     callQueue: [],
     _indexes: [],
     methods: {},
     methodOptions: {},
     statics: {},
     tree:
      { username: [Object],
        name: [Object],
        passwordHash: [Function: String],
        blogs: [Array],
        _id: [Object],
        __v: [Function: Number],
        id: [VirtualType] },
     query: {},
     childSchemas: [],
     plugins:
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     '$id': 2,
     s: { hooks: [Kareem] },
     _userProvidedOptions: { toJSON: [Object] },
     options:
      { typePojoToMixed: true,
        typeKey: 'type',
        id: true,
        noVirtualId: false,
        _id: true,
        noId: false,
        validateBeforeSave: true,
        read: null,
        shardKey: null,
        autoIndex: null,
        minimize: true,
        discriminatorKey: '__t',
        optimisticConcurrency: false,
        versionKey: '__v',
        capped: false,
        bufferCommands: true,
        strictQuery: false,
        strict: true,
        toJSON: [Object],
        pluralization: true },
     '$globalPluginsApplied': true,
     _requiredpaths: [ 'name', 'username' ],
     _indexedpaths: [ [Array] ] },
  op: 'findOne',
  options: {},
  _conditions: { _id: '607ee809a798912b56983776' },
  _fields: undefined,
  _update: undefined,
  _path: undefined,
  _distinct: undefined,
  _collection:
   NodeCollection {
     collection:
      NativeCollection {
        collection: [Collection],
        Promise: [Function: Promise],
        _closed: false,
        opts: [Object],
        name: 'users',
        collectionName: 'users',
        conn: [NativeConnection],
        queue: [],
        buffer: false,
        emitter: [EventEmitter] },
     collectionName: 'users' },
  _traceFunction: undefined,
  '$useProjection': true }
the decoded token:  { username: 'letmein',
  id: '607ee809a798912b56983776',
  iat: 1619262953,
  exp: 1619266553 }
the user at the post is :  { blogs:
   [ 60827dadd3fa5a4dbdfad68d,
     6083d21d3cfd5625dd726c7b,
     6083df7430366152687c3118,
     6083dfa8ded0c25323257fda,
     6083dfecbcb5d2540d2169c5,
     6083fc191a734729b1198c8b,
     6083fd55ad06552db898ced2 ],
  _id: 607ee809a798912b56983776,
  username: 'letmein',
  name: 'letmeinname',
  passwordHash:
   '$2b$10$JWC9Fhi4.lip/YdoMyt0WObkvSEU2fyVxl.L5tCK.rH/IYHrgMVcm',
  __v: 7 }
